{"version":3,"sources":["webpack:///./src/components/Layout.js","webpack:///./src/components/Link.js","webpack:///./src/pages/index.js"],"names":["Template","render","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","Fragment","react_helmet__WEBPACK_IMPORTED_MODULE_4___default","title","meta","name","content","lang","className","gatsby_link__WEBPACK_IMPORTED_MODULE_3___default","to","this","props","children","t","Component","propTypes","prop_types__WEBPACK_IMPORTED_MODULE_2___default","func","Link","_ref","react__WEBPACK_IMPORTED_MODULE_0___default","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","concat","join","Index","posts","data","allMarkdownRemark","edges","_components_Layout__WEBPACK_IMPORTED_MODULE_3__","filter","post","node","frontmatter","length","map","key","id","path","date","excerpt","_components_Link__WEBPACK_IMPORTED_MODULE_2__","pageQuery"],"mappings":"kNAOqBA,oGAKjBC,kBACI,OACIC,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACIH,EAAAC,EAAAC,cAACE,EAAAH,GACGI,MAAM,iBACNC,OACMC,KAAM,cAAeC,QAAS,mBAC9BD,KAAM,WAAYC,QAAS,qCAGjCR,EAAAC,EAAAC,cAAA,QAAMO,KAAK,QAEfT,EAAAC,EAAAC,cAAA,cACIF,EAAAC,EAAAC,cAAA,OAAKQ,UAAU,aACXV,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAACS,EAAAV,GACGW,GAAG,KADP,kBAQZZ,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAA,OAAKQ,UAAU,aACVG,KAAKC,MAAMC,WAGpBf,EAAAC,EAAAC,cAAA,4CAAAc,EAjCKlB,CAAiBE,EAAAC,EAAMgB,YAAvBnB,EACVoB,WACHH,SAAUI,EAAAlB,EAAUmB,mICJb,SAASC,EAATC,GAA2C,IAA3BP,EAA2BO,EAA3BP,SAAUL,EAAiBY,EAAjBZ,UAAWE,EAAMU,EAANV,GAClD,OACEW,EAAAtB,EAAAC,cAACsB,EAAAvB,GAAWS,WAAW,QAASe,OAAOf,OAAiBgB,KAAK,KAAMd,GAAIA,GACpEG,GDCqBK,QCDrBL,mMCCQ,SAASY,EAAMb,GAAO,IAElBc,EADEd,EAATe,KACsBC,kBAAtBC,MACR,OACIR,EAAAtB,EAAAC,cAAC8B,EAAA/B,EAAWa,EACRS,EAAAtB,EAAAC,cAAA,MAAIQ,UAAU,cACTkB,EACIK,OAAO,SAAAC,GAAA,OAAQA,EAAKC,KAAKC,YAAY/B,MAAMgC,OAAS,IACpDC,IAAI,SAAAhB,GAAoB,IAAXY,EAAWZ,EAAjBa,KACJ,OACIZ,EAAAtB,EAAAC,cAAA,UACIqB,EAAAtB,EAAAC,cAAA,WAASQ,UAAU,UAAU6B,IAAKL,EAAKM,IACnCjB,EAAAtB,EAAAC,cAAA,MAAIQ,UAAU,SACVa,EAAAtB,EAAAC,cAACsB,EAAAvB,GAAWW,GAAIsB,EAAKE,YAAYK,MAC5BP,EAAKE,YAAY/B,QAG1BkB,EAAAtB,EAAAC,cAAA,MAAIQ,UAAU,QACVa,EAAAtB,EAAAC,cAAA,YAAOgC,EAAKE,YAAYM,OAE5BnB,EAAAtB,EAAAC,cAAA,SACKgC,EAAKS,SAEVpB,EAAAtB,EAAAC,cAAC0C,EAAA3C,GAAKW,GAAIsB,EAAKE,YAAYK,MAA3B,mBDxB7B1B,OCkCA,IAAM8B","file":"component---src-pages-index-js-0df9b374fee5f41e4ecc.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Link from 'gatsby-link';\nimport Helmet from 'react-helmet';\n\nimport '../css/typography.css';\n\nexport default class Template extends React.Component {\n    static propTypes = {\n        children: PropTypes.func,\n    };\n\n    render() {\n        return (\n            <React.Fragment>\n                <Helmet\n                    title=\"Sean McPherson\"\n                    meta={[\n                        { name: 'description', content: 'Sean McPherson' },\n                        { name: 'keywords', content: 'Sean McPherson, Sean, McPherson' },\n                    ]}\n                >\n                    <html lang=\"en\" />\n                </Helmet>\n                <header>\n                    <div className=\"responder\">\n                        <h1>\n                            <Link\n                                to=\"/\"\n                            >\n                                Gatsby Blog\n                            </Link>\n                        </h1>\n                    </div>\n                </header>\n                <main>\n                    <div className=\"responder\">\n                        {this.props.children}\n                    </div>\n                </main>\n                <footer>Â© Sean McPherson | (SDG)</footer>\n            </React.Fragment>\n        );\n    }\n}\n","import React from 'react';\nimport GatsbyLink from 'gatsby-link';\n\nimport '../css/link.css';\n\nexport default function Link({ children, className, to }) {\n  return (\n    <GatsbyLink className={[`link`].concat(className || []).join(' ')} to={to}>\n      {children}\n    </GatsbyLink>\n  );\n}\n","import React from 'react';\nimport GatsbyLink from 'gatsby-link';\nimport { graphql } from 'gatsby';\n\nimport Link from '../components/Link';\nimport Layout from '../components/Layout';\n\nimport '../css/index.css';\n\nexport default function Index(props) {\n    const { data } = props;\n    const { edges: posts } = data.allMarkdownRemark;\n    return (\n        <Layout {...props}>\n            <ul className=\"blog-posts\">\n                {posts\n                    .filter(post => post.node.frontmatter.title.length > 0)\n                    .map(({ node: post }) => {\n                        return (\n                            <li>\n                                <article className=\"preview\" key={post.id}>\n                                    <h1 className=\"title\">\n                                        <GatsbyLink to={post.frontmatter.path}>\n                                            {post.frontmatter.title}\n                                        </GatsbyLink>\n                                    </h1>\n                                    <h2 className=\"date\">\n                                        <time>{post.frontmatter.date}</time>\n                                    </h2>\n                                    <p>\n                                        {post.excerpt}\n                                    </p>\n                                    <Link to={post.frontmatter.path}>Read more</Link>\n                                </article>\n                            </li>\n                        );\n                    })}\n            </ul>\n        </Layout>\n    );\n}\n\nexport const pageQuery = graphql`\n  query IndexQuery {\n    allMarkdownRemark(sort: { order: DESC, fields: [frontmatter___date] }) {\n      edges {\n        node {\n          excerpt(pruneLength: 250)\n          id\n          frontmatter {\n            title\n            date(formatString: \"MMMM DD, YYYY\")\n            path\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}